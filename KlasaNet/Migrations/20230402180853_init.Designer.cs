// <auto-generated />
using KlasaNet.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KlasaNet.Migrations
{
    [DbContext(typeof(KlasaNetContext))]
    [Migration("20230402180853_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.2.23128.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KlasaNet.Models.Class", b =>
                {
                    b.Property<int>("IdClass")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClass"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdClass");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("KlasaNet.Models.Director", b =>
                {
                    b.Property<int>("IdDirector")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDirector"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdSchool")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDirector");

                    b.HasIndex("IdSchool");

                    b.ToTable("Directors");
                });

            modelBuilder.Entity("KlasaNet.Models.Parent", b =>
                {
                    b.Property<int>("IdParent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdParent"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdParent");

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("KlasaNet.Models.School", b =>
                {
                    b.Property<int>("IdSchool")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSchool"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSchool");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("KlasaNet.Models.Student", b =>
                {
                    b.Property<int>("IdStudent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStudent"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdClass")
                        .HasColumnType("int");

                    b.Property<int>("IdHomeroomTeacher")
                        .HasColumnType("int");

                    b.Property<int>("IdSchool")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdStudent");

                    b.HasIndex("IdClass");

                    b.HasIndex("IdHomeroomTeacher");

                    b.HasIndex("IdSchool");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("KlasaNet.Models.Subject", b =>
                {
                    b.Property<int>("IdSubject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSubject"));

                    b.Property<int>("IdSchool")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSubject");

                    b.HasIndex("IdSchool");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("KlasaNet.Models.Teacher", b =>
                {
                    b.Property<int>("IdTeacher")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTeacher"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdSchool")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTeacher");

                    b.HasIndex("IdSchool");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("KlasaNet.Models.TeacherSubjectClass", b =>
                {
                    b.Property<int>("IdTeacher")
                        .HasColumnType("int");

                    b.Property<int>("IdClass")
                        .HasColumnType("int");

                    b.Property<int>("IdSubject")
                        .HasColumnType("int");

                    b.Property<int>("IdSchool")
                        .HasColumnType("int");

                    b.Property<int>("IdTeacherSubjectClass")
                        .HasColumnType("int");

                    b.HasKey("IdTeacher", "IdClass", "IdSubject");

                    b.HasIndex("IdClass");

                    b.HasIndex("IdSchool");

                    b.HasIndex("IdSubject");

                    b.ToTable("TeacherSubjectClasses");
                });

            modelBuilder.Entity("ParentStudent", b =>
                {
                    b.Property<int>("ParentsIdParent")
                        .HasColumnType("int");

                    b.Property<int>("StudentsIdStudent")
                        .HasColumnType("int");

                    b.HasKey("ParentsIdParent", "StudentsIdStudent");

                    b.HasIndex("StudentsIdStudent");

                    b.ToTable("StudentParent", (string)null);
                });

            modelBuilder.Entity("KlasaNet.Models.Director", b =>
                {
                    b.HasOne("KlasaNet.Models.School", "School")
                        .WithMany("Directors")
                        .HasForeignKey("IdSchool")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("KlasaNet.Models.Student", b =>
                {
                    b.HasOne("KlasaNet.Models.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("IdClass")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KlasaNet.Models.Teacher", "HomeroomTeacher")
                        .WithMany("Students")
                        .HasForeignKey("IdHomeroomTeacher")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("KlasaNet.Models.School", "School")
                        .WithMany("Students")
                        .HasForeignKey("IdSchool")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("HomeroomTeacher");

                    b.Navigation("School");
                });

            modelBuilder.Entity("KlasaNet.Models.Subject", b =>
                {
                    b.HasOne("KlasaNet.Models.School", "School")
                        .WithMany("Subjects")
                        .HasForeignKey("IdSchool")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("KlasaNet.Models.Teacher", b =>
                {
                    b.HasOne("KlasaNet.Models.School", "School")
                        .WithMany("Teachers")
                        .HasForeignKey("IdSchool")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("KlasaNet.Models.TeacherSubjectClass", b =>
                {
                    b.HasOne("KlasaNet.Models.Class", "Class")
                        .WithMany("TeacherSubjectClasses")
                        .HasForeignKey("IdClass")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("KlasaNet.Models.School", "School")
                        .WithMany("TeacherSubjectClasses")
                        .HasForeignKey("IdSchool")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("KlasaNet.Models.Subject", "Subject")
                        .WithMany("TeacherSubjectClasses")
                        .HasForeignKey("IdSubject")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("KlasaNet.Models.Teacher", "Teacher")
                        .WithMany("TeacherSubjectClasses")
                        .HasForeignKey("IdTeacher")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("School");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("ParentStudent", b =>
                {
                    b.HasOne("KlasaNet.Models.Parent", null)
                        .WithMany()
                        .HasForeignKey("ParentsIdParent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KlasaNet.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsIdStudent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KlasaNet.Models.Class", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("TeacherSubjectClasses");
                });

            modelBuilder.Entity("KlasaNet.Models.School", b =>
                {
                    b.Navigation("Directors");

                    b.Navigation("Students");

                    b.Navigation("Subjects");

                    b.Navigation("TeacherSubjectClasses");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("KlasaNet.Models.Subject", b =>
                {
                    b.Navigation("TeacherSubjectClasses");
                });

            modelBuilder.Entity("KlasaNet.Models.Teacher", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("TeacherSubjectClasses");
                });
#pragma warning restore 612, 618
        }
    }
}
